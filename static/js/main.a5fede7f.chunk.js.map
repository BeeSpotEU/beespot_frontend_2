{"version":3,"sources":["components/pick-location/bee-logo.svg","logo.svg","components/audience/index.js","components/foodsources/index.js","components/production/index.js","components/presentation/index.js","components/location-form/index.js","utility/store.js","components/clients/index.js","components/mapviewer/index.js","components/pick-location/pin.js","components/pick-location/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputGroup","Input","Group","AudienceForm","Select","Option","Form","create","props","getFieldDecorator","form","loading","onSubmit","e","preventDefault","validateFields","err","values","className","Item","label","colon","rules","required","message","placeholder","compact","type","htmlType","FoodSources","min","max","defaultValue","Production","Presentation","ButtonGroup","Button","LocationForm","handleAddLocation","ContextStore","React","initialState","channel","selfCreatedLocations","Map","locations","reducer","state","action","produce","draft","set","location","id","Clients","Consumer","useContext","dispatch","push","body","MapViewer","pinStyle","pointerEvents","Pin","src","SVG","style","PureComponent","PickLocation","useState","latitude","longitude","zoom","viewport","setViewport","mapRef","setMapRef","onDragEnd","lngLat","console","log","ref","mapStyle","width","height","onViewportChange","viewport2","Array","from","map","parseFloat","key","offsetTop","offsetLeft","draggable","shape","icon","size","onClick","center","getMap","getCenter","lat","lng","App","useEffect","socket","Socket","process","connect","onClose","newChannel","join","receive","error","on","payload","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","children","value","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,sC,gFCA3CD,EAAOC,QAAU,IAA0B,kC,+MCErCC,EAAaC,IAAMC,MAoEZC,GAlEMC,IAAXC,OAkEoBC,IAAKC,QAALD,CAhEJ,SAAAE,GAAU,IAEtBC,EAGND,EAHFE,KAAQD,kBAERE,EACEH,EADFG,QAaF,OACE,kBAAC,IAAD,CAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFN,EAAME,KAAKK,eAAe,SAACC,EAAKC,OAQFC,UAAU,iBACtC,kBAAC,IAAKC,KAAN,CAAWC,MAAM,OAAOC,OAAO,GAC5BZ,EAAkB,OAAQ,CACzBa,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,WAExB,kBAACzB,EAAD,CAAY0B,SAAO,GACnB,kBAAC,IAAKP,KAAN,CAAWC,MAAM,WAAWC,OAAO,GAChCZ,EAAkB,WAAY,CAC7Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,eAExB,kBAAC,IAAKN,KAAN,CAAWC,MAAM,aAAaC,OAAO,GAClCZ,EAAkB,aAAc,CAC/Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,kBAGxB,kBAAC,IAAKN,KAAN,KACE,kBAAC,IAAD,CACER,QAASA,EACTgB,KAAK,UACLC,SAAS,SACTV,UAAU,qBAJZ,e,SCWKW,GAnEM5B,IAAMC,MAENE,IAAXC,OAiEmBC,IAAKC,QAALD,CA/DG,SAAAE,GAAU,IAE5BC,EAGND,EAHFE,KAAQD,kBAERE,EACEH,EADFG,QAaF,OACE,kBAAC,IAAD,CAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFN,EAAME,KAAKK,eAAe,SAACC,EAAKC,OAQFC,UAAU,2BACtC,kBAAC,IAAKC,KAAN,CAAWC,MAAM,OAAOC,OAAO,GAA/B,0BAEGZ,EAAkB,OAAQ,CACzBa,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,WAExB,kBAAC,IAAKN,KAAN,CAAWC,MAAM,qBAAqBC,OAAO,GAC1CZ,EAAkB,SAAU,CAC3Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CAJdf,CAOE,kBAAC,IAAD,CAAQqB,IAAK,EAAGC,IAAK,GAAIC,aAAc,MAE5C,kBAAC,IAAKb,KAAN,CAAWC,MAAM,cAAcC,OAAO,GACnCZ,EAAkB,cAAe,CAChCa,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,sEAJdf,CAOE,kBAAC,IAAD,CAAQqB,IAAK,EAAGC,IAAK,GAAIC,aAAc,MAE5C,kBAAC,IAAKb,KAAN,KACE,kBAAC,IAAD,CACER,QAASA,EACTgB,KAAK,UACLC,SAAS,SACTV,UAAU,qBAJZ,e,SCYKe,GAnEMhC,IAAMC,MAENE,IAAXC,OAiEkBC,IAAKC,QAALD,CA/DH,SAAAE,GAAU,IAErBC,EAGND,EAHFE,KAAQD,kBAERE,EACEH,EADFG,QAaF,OACE,kBAAC,IAAD,CAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFN,EAAME,KAAKK,eAAe,SAACC,EAAKC,OAQFC,UAAU,2BACtC,kBAAC,IAAKC,KAAN,CAAWC,MAAM,OAAOC,OAAO,GAA/B,0BAEGZ,EAAkB,OAAQ,CACzBa,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,WAExB,kBAAC,IAAKN,KAAN,CAAWC,MAAM,mDAAmDC,OAAO,GACxEZ,EAAkB,SAAU,CAC3Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8DAJdf,CAOE,kBAAC,IAAD,CAAaqB,IAAK,EAAGC,IAAK,QAE/B,kBAAC,IAAKZ,KAAN,CAAWC,MAAM,mDAAmDC,OAAO,GACxEZ,EAAkB,SAAU,CAC3Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8DAJdf,CAOE,kBAAC,IAAD,CAAaqB,IAAK,EAAGC,IAAK,OAE/B,kBAAC,IAAKZ,KAAN,KACE,kBAAC,IAAD,CACER,QAASA,EACTgB,KAAK,UACLC,SAAS,SACTV,UAAU,qBAJZ,eCvDKgB,EAAe,WAC1B,OAAO,qCCAHC,EAAcC,IAAOlC,MA0FdmC,EAAe/B,IAAKC,QAALD,CAxFJ,SAAAE,GAAU,IAEtBC,EAGND,EAHFE,KAAQD,kBACR6B,EAEE9B,EAFF8B,kBACA3B,EACEH,EADFG,QAaF,OACE,kBAAC,IAAD,CAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFN,EAAME,KAAKK,eAAe,SAACC,EAAKC,GACzBD,GACHsB,EAAkBrB,MAMQC,UAAU,iBACtC,kBAAC,IAAKC,KAAN,CAAWC,MAAM,iBAAiBC,OAAO,GACtCZ,EAAkB,OAAQ,CACzBa,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4CAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,qBAExB,kBAAC,IAAKN,KAAN,CAAWC,MAAM,kCAAkCC,OAAO,GACvDZ,EAAkB,QAAS,CAC1Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,uDAJdf,CAOE,kBAAC,IAAD,CAAaqB,IAAK,EAAGC,IAAK,OAE/B,kBAAC,IAAKZ,KAAN,CAAWC,MAAM,cAAcC,OAAO,GACnCZ,EAAkB,YAAa,CAC9Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,kBAExB,kBAAC,IAAKN,KAAN,CAAWC,MAAM,eAAeC,OAAO,GACpCZ,EAAkB,WAAY,CAC7Ba,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8BAJdf,CAOE,kBAAC,IAAD,CAAOgB,YAAY,mBAExB,kBAACU,EAAD,KACE,kBAAC,IAAD,CACExB,QAASA,EACTgB,KAAK,SACLC,SAAS,SACTV,UAAU,qBAJZ,0BAQA,kBAAC,IAAD,CACEP,QAASA,EACTgB,KAAK,UACLC,SAAS,SACTV,UAAU,qBAJZ,oBAQA,kBAAC,IAAD,CACEP,QAASA,EACTgB,KAAK,UACLC,SAAS,SACTV,UAAU,qBAJZ,a,iBC9EFqB,EAAeC,kBAEfC,EAAe,CACnBC,QAAS,KACTC,qBAAsB,IAAIC,IAC1BC,UAAW,IAAID,KAGXE,EAAU,SAACC,EAAOC,GACtB,OAAOC,YAAQF,EAAO,SAAAG,GACpB,OAAQF,EAAOrB,MACb,IAAK,aACHuB,EAAMR,QAAUM,EAAON,QACvB,MACF,IAAK,cACHQ,EAAML,UAAY,IAAID,IACpBM,EAAML,UAAUM,IAAIH,EAAOI,SAASC,GAAIL,EAAOI,WAEjD,MACF,IAAK,kBACHF,EAAMP,qBAAuB,IAAIC,IAC/BM,EAAMP,qBAAqBQ,IAAIH,EAAOI,SAASC,GAAIL,EAAOI,eCpBvDE,GDsCgBf,EAAagB,SCtCnB,WAAO,IAAD,EACCC,qBAAWjB,GAA/BQ,EADmB,EACnBA,MADmB,EACZU,SAQf,OAAO,kBAACpB,EAAD,CAAcC,kBAND,SAAAc,GACdL,EAAML,SACRK,EAAML,QAAQgB,KAAK,eAAgB,CAAEC,KAAMP,SCPpCQ,EAAY,WACvB,OAAO,qC,wFCAHC,EAAW,CACfC,cAAe,QAGIC,E,iLAEjB,OAAO,yBAAKC,IAAKC,IAAKC,MAAOL,Q,GAFAM,iB,mjBCE1B,IAAMC,EAAe,WAAO,IAAD,EACJZ,qBAAWjB,GAA/BQ,EADwB,EACxBA,MADwB,KACjBU,SACiBY,mBAAS,CACvCC,SAAU,OACVC,UAAW,MACXC,KAAM,KALwB,mBAEzBC,EAFyB,KAEfC,EAFe,OAQJL,qBARI,mBAQzBM,EARyB,KAQjBC,EARiB,OAcFP,oBAAS,GAdP,mBAgB1BQ,GAhB0B,UAgBd,SAAAzB,GAAQ,OAAI,SAAAvC,GACxBkC,EAAML,SACRK,EAAML,QAAQgB,KAAK,eAAgB,CACjCC,KAAK,EAAD,GACCP,EADD,CAEFmB,UAAU,GAAD,OAAK1D,EAAEiE,OAAO,IACvBR,SAAS,GAAD,OAAKzD,EAAEiE,OAAO,WAM9BC,QAAQC,IAAIjC,EAAMJ,sBAkBlB,OACE,yBAAKzB,UAAU,kBACb,kBAAC,IAAD,eACE+D,IAAK,SAAAA,GAAG,OAAIL,EAAUK,IACtBC,SAAS,uCACLT,EAHN,CAIEU,MAAM,OACNC,OAAO,OACPC,iBAAkB,SAAAC,GAAS,OAAIZ,EAAYY,MAE1CC,MAAMC,KAAKzC,EAAMJ,qBAAqB1B,UAAUwE,IAAI,SAAArC,GACnD,IAAMmB,EAAYmB,WAAWtC,EAASmB,WAChCD,EAAWoB,WAAWtC,EAASkB,UACrC,OACE,kBAAC,IAAD,CACEqB,IAAKvC,EAASC,GACdkB,UAAWA,EACXD,SAAUA,EACVsB,WAAY,GACZC,YAAa,GACbC,WAAS,EAGTjB,UAAWA,EAAUzB,IAErB,kBAAC,EAAD,UAKR,kBAAC,IAAD,CACEzB,KAAK,UACLoE,MAAM,SACNC,KAAK,OACLC,KAAK,QACLC,QAnDgB,WACpB,IACMC,EADMxB,EAAOyB,SACAC,YAEftD,EAAML,SACRK,EAAML,QAAQgB,KAAK,eAAgB,CACjCC,KAAM,CACJW,SAAS,GAAD,OAAK6B,EAAOG,KACpB/B,UAAU,GAAD,OAAK4B,EAAOI,SA4CvBrF,UAAU,mBC9BHsF,MA7Cf,WAAgB,IAAD,EACehD,qBAAWjB,GAA/BQ,EADK,EACLA,MAAOU,EADF,EACEA,SA4Bf,OA1BAgD,oBAAU,WACR,IAAK1D,EAAML,QAAS,CAClB,IAAMgE,EAAS,IAAIC,SAAOC,yDAC1BF,EAAOG,UACPH,EAAOI,QAAQ,SAAAjG,GAAC,OAAI4C,EAAS,CAAE9B,KAAM,aAAce,QAAS,SAE5D,IAAMqE,EAAaL,EAAOhE,QAAQ,kBAAmB,IACrDqE,EACGC,OACAC,QAAQ,QAAS,kBAAMlC,QAAQmC,MAAM,sBACrCD,QAAQ,KAAM,kBACbxD,EAAS,CAAE9B,KAAM,aAAce,QAASqE,MAG5CA,EAAWrD,KAAK,iBAAkB,IAClCqD,EAAWI,GAAG,kBAAmBpC,QAAQC,KACzC+B,EAAWI,GAAG,eAAgB,SAAAC,GAC5B3D,EAAS,CAAE9B,KAAM,cAAeyB,SAAUgE,EAAQzD,SAGpDoD,EAAWI,GAAG,mBAAoB,SAAAC,GAChC3D,EAAS,CAAE9B,KAAM,kBAAmByB,SAAUgE,EAAQzD,WAGzD,IAGD,yBAAKzC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmG,KAAK,IAAIC,OAAK,EAACC,UAAWjE,IACjC,kBAAC,IAAD,CAAO+D,KAAK,YAAYC,OAAK,EAACC,UAAWpH,IACzC,kBAAC,IAAD,CAAOkH,KAAK,eAAeC,OAAK,EAACC,UAAW1F,IAC5C,kBAAC,IAAD,CAAOwF,KAAK,gBAAgBC,OAAK,EAACC,UAAWrF,IAC7C,kBAAC,IAAD,CAAOmF,KAAK,YAAYC,OAAK,EAACC,UAAWlF,IACzC,kBAAC,IAAD,CAAOgF,KAAK,cAAcC,OAAK,EAACC,UAAWtF,IAC3C,kBAAC,IAAD,CAAOoF,KAAK,UAAUC,OAAK,EAACC,UAAW3D,IACvC,kBAAC,IAAD,CAAOyD,KAAK,gBAAgBC,OAAK,EAACC,UAAWnD,OC3CjCoD,QACW,cAA7BC,OAAOrE,SAASsE,UAEe,UAA7BD,OAAOrE,SAASsE,UAEhBD,OAAOrE,SAASsE,SAASC,MACvB,2DCXNC,IAASC,OACP,kBPyB2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnBtF,aAAiBM,EAASL,GADP,mBAEvCsF,EAAQ,CAAEhF,MAF6B,KAEtBU,SAFsB,MAI7C,OACE,gBAAClB,EAAayF,SAAd,CAAuBD,MAAOA,GAAQD,IO9BxC,KACE,kBAAC,EAAD,OAEFG,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.a5fede7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bee-logo.9a5c4dbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { Form, Input, Icon, Button, DatePicker, Select } from \"antd\";\r\nconst InputGroup = Input.Group;\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddAudienceForm = props => {\r\n  const {\r\n    form: { getFieldDecorator },\r\n    // handleAddMachtiging,\r\n    loading\r\n  } = props;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        // handleAddMachtiging(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} className=\"audience-form\">\r\n      <Form.Item label=\"Naam\" colon={false}>\r\n        {getFieldDecorator(\"Naam\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Vul hier je naam in :)\"\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Naam\" />)}\r\n      </Form.Item>\r\n      <InputGroup compact>\r\n      <Form.Item label=\"Postcode\" colon={false}>\r\n        {getFieldDecorator(\"Postcode\", {\r\n          rules: [\r\n            {\r\n              required: false,\r\n              message: \"Een postcode is optioneel.\"\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Postcode\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"Huisnummer\" colon={false}>\r\n        {getFieldDecorator(\"Huisnummer\", {\r\n          rules: [\r\n            {\r\n              required: false,\r\n              message: \"Een huisnummer is optioneel.\"\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Huisnummer\" />)}\r\n      </Form.Item>\r\n      </InputGroup>\r\n      <Form.Item>\r\n        <Button\r\n          loading={loading}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport const AudienceForm = Form.create()(AddAudienceForm);\r\n","import React from \"react\";\r\nimport { Form, Input, Icon, Button, Select, Slider } from \"antd\";\r\nconst InputGroup = Input.Group;\r\n\r\nconst { Option } = Select;\r\n\r\nconst SourceExpectationForm = props => {\r\n  const {\r\n    form: { getFieldDecorator },\r\n    // handleAddMachtiging,\r\n    loading\r\n  } = props;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        // handleAddMachtiging(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} className=\"source-expectation-form\">\r\n      <Form.Item label=\"Naam\" colon={false}>\r\n        // Get name from server \r\n        {getFieldDecorator(\"Naam\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Vul hier je naam in :)\"\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Naam\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"Dracht hoeveelheid\" colon={false}>\r\n        {getFieldDecorator(\"Dracht\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Vul hier een schatting van de dracht in.\"\r\n            }\r\n          ],\r\n        })(<Slider min={1} max={10} defaultValue={5} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"Diversiteit\" colon={false}>\r\n        {getFieldDecorator(\"Diversiteit\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Vul hier een schatting van de diversiteit gedurende het jaar in.\"\r\n            }\r\n          ],\r\n        })(<Slider min={1} max={10} defaultValue={5} />)}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          loading={loading}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport const FoodSources = Form.create()(SourceExpectationForm);\r\n","import React from \"react\";\r\nimport { Form, Input, InputNumber, Icon, Button, Select, Slider } from \"antd\";\r\nconst InputGroup = Input.Group;\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductionForm = props => {\r\n  const {\r\n    form: { getFieldDecorator },\r\n    // handleAddMachtiging,\r\n    loading\r\n  } = props;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        // handleAddMachtiging(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} className=\"source-expectation-form\">\r\n      <Form.Item label=\"Naam\" colon={false}>\r\n        // Get name from server \r\n        {getFieldDecorator(\"Naam\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Vul hier je naam in :)\"\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Naam\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"Opbrengst honing in kilo's honing afgelopen jaar\" colon={false}>\r\n        {getFieldDecorator(\"Honing\", {\r\n          rules: [\r\n            { \r\n              required: true,\r\n              message: \"Vul hier het aantal kilo's honing van afgelopen jaar in.\"\r\n            }\r\n          ]\r\n        })(<InputNumber min={0} max={500} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"Aantal kilo suiker gevoerd in het afgelopen jaar\" colon={false}>\r\n        {getFieldDecorator(\"Suiker\", {\r\n          rules: [\r\n            { \r\n              required: true,\r\n              message: \"Vul hier het aantal kilo's suiker van afgelopen jaar in.\"\r\n            }\r\n          ]\r\n        })(<InputNumber min={0} max={99} />)}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          loading={loading}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport const Production = Form.create()(ProductionForm);\r\n","import React from \"react\";\r\n\r\nexport const Presentation = () => {\r\n  return <p>hello</p>;\r\n};\r\n","import React from \"react\";\nimport { Form, Input, InputNumber, Icon, Button } from \"antd\";\n\nconst ButtonGroup = Button.Group;\n\nconst AddLocationForm = props => {\n  const {\n    form: { getFieldDecorator },\n    handleAddLocation,\n    loading\n  } = props;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        handleAddLocation(values);\n      }\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} className=\"location-form\">\n      <Form.Item label=\"Bijenstandnaam\" colon={false}>\n        {getFieldDecorator(\"name\", {\n          rules: [\n            {\n              required: true,\n              message: \"Vul hier de naam van de bijenstand in.\"\n            }\n          ]\n        })(<Input placeholder=\"Bijenstandnaam\" />)}\n      </Form.Item>\n      <Form.Item label=\"Aantal volken in afgelopen jaar\" colon={false}>\n        {getFieldDecorator(\"hives\", {\n          rules: [\n            {\n              required: true,\n              message: \"Vul hier het aantal volken van afgelopen jaar in.\"\n            }\n          ]\n        })(<InputNumber min={0} max={99} />)}\n      </Form.Item>\n      <Form.Item label=\"Lengtegraad\" colon={false}>\n        {getFieldDecorator(\"longitude\", {\n          rules: [\n            {\n              required: true,\n              message: \"Vul een lengtegraad in!\"\n            }\n          ]\n        })(<Input placeholder=\"Lengtegraad\" />)}\n      </Form.Item>\n      <Form.Item label=\"Breedtegraad\" colon={false}>\n        {getFieldDecorator(\"latitude\", {\n          rules: [\n            {\n              required: true,\n              message: \"Vul een breedtegraad in!\"\n            }\n          ]\n        })(<Input placeholder=\"Breedtegraad\" />)}\n      </Form.Item>\n      <ButtonGroup>\n        <Button\n          loading={loading}\n          type=\"danger\"\n          htmlType=\"submit\"\n          className=\"login-form-button\"\n        >\n          Ik heb geen bijenstand\n        </Button>\n        <Button\n          loading={loading}\n          type=\"default\"\n          htmlType=\"submit\"\n          className=\"login-form-button\"\n        >\n          Nog een stand...\n        </Button>\n        <Button\n          loading={loading}\n          type=\"primary\"\n          htmlType=\"submit\"\n          className=\"login-form-button\"\n        >\n          Klaar\n        </Button>\n      </ButtonGroup>\n    </Form>\n  );\n};\nexport const LocationForm = Form.create()(AddLocationForm);\n","import * as React from \"react\";\nimport produce from \"immer\";\n\nconst ContextStore = React.createContext();\n\nconst initialState = {\n  channel: null,\n  selfCreatedLocations: new Map(),\n  locations: new Map()\n};\n\nconst reducer = (state, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case \"setChannel\":\n        draft.channel = action.channel;\n        break;\n      case \"newLocation\":\n        draft.locations = new Map(\n          draft.locations.set(action.location.id, action.location)\n        );\n        break;\n      case \"createdLocation\":\n        draft.selfCreatedLocations = new Map(\n          draft.selfCreatedLocations.set(action.location.id, action.location)\n        );\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nconst ContextStoreProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <ContextStore.Provider value={value}>{children}</ContextStore.Provider>\n  );\n};\n\nconst ContextStoreConsumer = ContextStore.Consumer;\n\nexport { ContextStore, ContextStoreProvider, ContextStoreConsumer };\n","import React, { useContext } from \"react\";\r\nimport { LocationForm } from \"components/location-form\";\r\nimport { ContextStore } from \"utility/store\";\r\n\r\nexport const Clients = () => {\r\n  const { state, dispatch } = useContext(ContextStore);\r\n\r\n  const addLocation = location => {\r\n    if (state.channel) {\r\n      state.channel.push(\"add_location\", { body: location });\r\n    }\r\n  };\r\n\r\n  return <LocationForm handleAddLocation={addLocation} />;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const MapViewer = () => {\r\n  return <p>world</p>;\r\n};\r\n","import React, { PureComponent } from \"react\";\nimport SVG from \"./bee-logo.svg\";\n\nconst pinStyle = {\n  pointerEvents: \"none\"\n};\n\nexport default class Pin extends PureComponent {\n  render() {\n    return <img src={SVG} style={pinStyle}></img>;\n  }\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { LocationForm } from \"components/location-form\";\nimport { ContextStore } from \"utility/store\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./styles.css\";\nimport Pin from \"./pin\";\nimport { Button } from \"antd\";\n\nexport const PickLocation = () => {\n  const { state, dispatch } = useContext(ContextStore);\n  const [viewport, setViewport] = useState({\n    latitude: 52.119,\n    longitude: 5.111,\n    zoom: 8\n  });\n\n  const [mapRef, setMapRef] = useState();\n  // const [marker, setMarker] = useState({\n  //   longitude: 5.111,\n  //   latitude: 52.119\n  // });\n\n  const [placing, setPlacing] = useState(false);\n\n  const onDragEnd = location => e => {\n    if (state.channel) {\n      state.channel.push(\"add_location\", {\n        body: {\n          ...location,\n          longitude: `${e.lngLat[0]}`,\n          latitude: `${e.lngLat[1]}`\n        }\n      });\n    }\n  };\n\n  console.log(state.selfCreatedLocations);\n\n  const onClickButton = () => {\n    const map = mapRef.getMap();\n    const center = map.getCenter();\n\n    if (state.channel) {\n      state.channel.push(\"add_location\", {\n        body: {\n          latitude: `${center.lat}`,\n          longitude: `${center.lng}`\n        }\n      });\n    }\n  };\n\n  const updateLocation = () => {};\n\n  return (\n    <div className=\"mapbox-wrapper\">\n      <ReactMapGL\n        ref={ref => setMapRef(ref)}\n        mapStyle=\"//mvt.opengeo.nl/basemap-style.json\"\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        onViewportChange={viewport2 => setViewport(viewport2)}\n      >\n        {Array.from(state.selfCreatedLocations.values()).map(location => {\n          const longitude = parseFloat(location.longitude);\n          const latitude = parseFloat(location.latitude);\n          return (\n            <Marker\n              key={location.id}\n              longitude={longitude}\n              latitude={latitude}\n              offsetTop={-39}\n              offsetLeft={-23}\n              draggable\n              // onDragStart={this._onMarkerDragStart}\n              // onDrag={this._onMarkerDrag}\n              onDragEnd={onDragEnd(location)}\n            >\n              <Pin></Pin>\n            </Marker>\n          );\n        })}\n      </ReactMapGL>\n      <Button\n        type=\"primary\"\n        shape=\"circle\"\n        icon=\"plus\"\n        size=\"large\"\n        onClick={onClickButton}\n        className=\"add_location\"\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Socket } from \"phoenix\";\nimport { Input } from \"antd\";\nimport { AudienceForm } from \"components/audience\";\nimport { FoodSources } from \"components/foodsources\";\nimport { Production } from \"components/production\";\nimport { Presentation } from \"components/presentation\";\nimport { Clients } from \"components/clients\";\nimport { LocationForm } from \"components/location-form\";\nimport { MapViewer } from \"components/mapviewer\";\nimport { ContextStoreProvider, ContextStore } from \"utility/store\";\nimport { PickLocation } from \"components/pick-location\";\n\nfunction App() {\n  const { state, dispatch } = useContext(ContextStore);\n\n  useEffect(() => {\n    if (!state.channel) {\n      const socket = new Socket(process.env.REACT_APP_SOCKET_URL);\n      socket.connect();\n      socket.onClose(e => dispatch({ type: \"setChannel\", channel: null }));\n\n      const newChannel = socket.channel(\"locations:lobby\", {});\n      newChannel\n        .join()\n        .receive(\"error\", () => console.error(\"Connection error\"))\n        .receive(\"ok\", () =>\n          dispatch({ type: \"setChannel\", channel: newChannel })\n        );\n\n      newChannel.push(\"create_session\", {});\n      newChannel.on(\"created_session\", console.log);\n      newChannel.on(\"new_location\", payload => {\n        dispatch({ type: \"newLocation\", location: payload.body });\n      });\n\n      newChannel.on(\"created_location\", payload => {\n        dispatch({ type: \"createdLocation\", location: payload.body });\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" exact component={Clients} />\n        <Route path=\"/audience\" exact component={AudienceForm} />\n        <Route path=\"/foodsources\" exact component={FoodSources} />\n        <Route path=\"/presentation\" exact component={Presentation} />\n        <Route path=\"/location\" exact component={LocationForm} />\n        <Route path=\"/production\" exact component={Production} />\n        <Route path=\"/viewer\" exact component={MapViewer} />\n        <Route path=\"/add-location\" exact component={PickLocation} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ContextStoreProvider } from \"utility/store\";\r\n\r\nReactDOM.render(\r\n  <ContextStoreProvider>\r\n    <App />\r\n  </ContextStoreProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}